#!/usr/bin/env bash
_git-uncommit() {
  local result
  result=$(git -C "$1" ${@:2})
  if [ -n "$result" ]; then
    echo "uncommit:$1,$2,$result"
  fi
}

_tracked() {
  local tracked
  if echo "$1" | grep -q "\/\.env\/"; then
    echo 1
    return
  fi
  tracked=$(git -C "$1" config --list | grep 'user\.email' 2>&1)
  if [ -z "$tracked" ]; then
    echo 0
  else
    echo 1
  fi
}

_git-command() {
  case "$2" in
    "update-index")
      _git-uncommit "$1" "$2" -q --refresh
    ;;
    "diff-index")
      _git-uncommit "$1" "$2" --name-only HEAD --
    ;;
    "status")
      _git-uncommit "$1" "$2" -sb | grep "\[ahead "
    ;;
    "ls-files")
      _git-uncommit "$1" "$2" --other --exclude-standard
    ;;
    "branch")
      _git-uncommit "$1" "$2" --show-current | grep -v -E ',(main|master)$'
    ;;
  esac
}

_git-commands() {
  local c
  if [ "$(_tracked "$1")" == 0 ]; then
    return
  fi
  {
    for c in update-index diff-index status ls-files branch; do
      if _git-command "$1" "$c" | grep '^uncommit:'; then
        break
      fi
    done
  } | grep '^uncommit:' | cut -d ':' -f 2- | cut -d ',' -f 1,2 | sed 's/,/ (/g' | sed 's/$/)/g' | sort -u
}

uncommit() {
  local res d sub has r ispwd isrev paths
  ispwd=0
  if [ -n "$1" ]; then
    if [ "$1" == "--pwd" ]; then
      isrev=$(git -C "$PWD" rev-parse --is-inside-work-tree 2>/dev/null)
      if [ "$isrev" == "true" ] && [ "$(_tracked "$PWD")" == 1 ]; then
        res=$(_git-commands "$PWD")
      else
        exit 0
      fi
      ispwd=1
    fi
  fi
  if [ "$ispwd" -eq 0 ]; then
    paths=""
    for d in .env workspace; do
      d="$HOME/$d"
      for sub in "$d"/*; do
        if [ ! -d "$sub/.git" ]; then
          continue
        fi
        paths="$paths $sub"
      done
    done
    for sub in $paths; do
      r=$(_git-commands "$sub")
      if [ -z "$res" ]; then
        res=$r
      else
        res=$(printf "%s\n%s\n" "$res" "$r")
      fi
    done
  fi
  res=$(echo "$res" | sed 's/^\s*//g' | sed  's/\s*$//g')
  has=0
  if [ -n "$res" ]; then
    has=1
  fi
  if [ -z "$1" ]; then
    if [ -n "$res" ]; then
      echo "$res"
    fi
  else
    case "$1" in
    "--pwd")
      if [ $has -eq 0 ]; then
        printf '\e[32m%s\e[0m' "(clean)"
      else
        printf '\e[31m%s\e[0m' "(dirty)"
      fi
      ;;
    *)
      echo "unknown subcommand"
      exit 1
      ;;
    esac
  fi
  exit $has
}

uncommit "$1"
