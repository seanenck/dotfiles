#!/usr/bin/env bash
CONFIG="$HOME/.config/voidedtech/git.yml"
HIST="$HOME/.cache/oclone.hst"

oclone() {
  local in spec dst url clone cfg rel
  in="$1"
  if [ "$in" == "--list" ]; then
    {
      yq ".specs[].name" "$CONFIG" | sed 's#$#/#g'
      if [ -e "$HIST" ]; then
        cat "$HIST"
      fi
    } | sort
    return
  fi
  repo=$(echo "$in" | cut -d '/' -f 1)
  spec=$(yq ".specs[] | select (.name == \"$repo\")" "$CONFIG")
  if [ -z "$spec" ]; then
    echo "invalid argument, spec not found"
    exit 1
  fi
  url=$(echo "$spec" | yq '.url')
  rel=$(echo "$in" | cut -d '/' -f 2-)
  clone="$url$rel"
  if ! git clone "$clone" "${@:2}"; then
    echo "clone failed"
    exit 1
  fi
  touch "$HIST"
  awk -v line="$in" 'FNR==NR && line==$0{f=1; exit} 
                              END{if (!f) print line >> FILENAME}' "$HIST"
  cfg=$(echo "$spec" | yq '.config')
  dst=$(echo "$in" | rev | cut -d '/' -f 1 | rev)
  if [ -z "$cfg" ]; then
    return
  fi
  if [ "$cfg" == "null" ]; then
    return
  fi
  dst="$dst/.git/config" 
  if [ ! -e "$dst" ]; then
    echo "unable to set config"
    exit 1
  fi
  echo "$cfg" >> "$dst"
}

if [ -z "$1" ]; then
  echo "argument required"
  exit 1
fi
if [ ! -e "$CONFIG" ]; then
  echo "$CONFIG is missing"
  exit 1
fi

oclone "$@"