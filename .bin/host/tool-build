#!/usr/bin/env bash
CONFIGS="$HOME/.config/voidedtech/builds"
ARTIFACTS="$PKGS_STORE/artifacts"
CACHE="$HOME/.cache/builds"
WORKDIR="$CACHE/workdir"
rm -f "$CACHE/*.Containerfile"
rm -rf "$WORKDIR"
mkdir -p "$WORKDIR"
if [ ! -d "$CONFIGS" ]; then
  echo "no configurations found"
  exit 1
fi

if [ -z "$1" ]; then
  echo "argument required"
  exit 1
fi

_list() {
  ls "$CONFIGS/"
}

if [ "$1" == "--list" ]; then
  _list
  exit 0
fi

CONF="$CONFIGS/$1"
if [ ! -e "$CONF" ]; then
  echo "invalid build, tool unknown: $1"
  exit 1
fi

source "$HOME/.bashrc.d/20-go.dev.sh"
source "$CONF"
export PKGDIR="/pkg"
export BINDIR="$PKGDIR/.bin"

declare -A BUILD=(\
  ["name"]="$1" 
)
for fxn in deps version sha256sum download build url install workdir src; do
  if [ "$(type -t "$fxn")" != "function" ]; then
    echo "$1 does not have required function: $fxn"
    exit 1
  fi
  BUILD[$fxn]=$($fxn)
done
ARTIFACT_PATH="$ARTIFACTS/$1.${BUILD[version]}.tar.xz"
if [ -e "$ARTIFACT_PATH" ]; then
  if ! confirm "artifact already exists, rebuild?"; then
    exit 0
  fi
fi
BUILD["src"]="src${BUILD[tar]}"

_containerfile() {
  cat << EOF
FROM fedora:latest

RUN dnf install -y wget ${BUILD[deps]}
RUN mkdir -p /build
WORKDIR /build

RUN wget -O ${BUILD[src]} ${BUILD[download]}
RUN echo '${BUILD[sha256sum]}  ${BUILD[src]}' > sha256.sums
RUN sha256sum -c sha256.sums
RUN tar xf ${BUILD[src]}

WORKDIR /build/${BUILD[workdir]}
EOF
  {
    echo "${BUILD[build]}"
    echo "ARG CACHE=1"
    echo "${BUILD[install]}"
  } | sed 's/^/RUN /g' | sed 's/^RUN ARG/ARG/g'
}

FILE="$CACHE/$1.Containerfile"
_containerfile > "$FILE"
if ! podman build --build-arg=CACHE="$(date +%s)" --volume "$WORKDIR:$PKGDIR:Z" -f "$FILE" -t "build-$1"; then
  exit 1
fi
rm -f "$ARTIFACT_PATH"
tar cvJf "$ARTIFACT_PATH" -C "$WORKDIR" "."
echo "installing..."
tar xvf "$ARTIFACT_PATH" -C "$HOME"
