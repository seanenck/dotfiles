#!/bin/bash
UPSTREAM="$HOME/.cache/upstreams/"
BUILDS="$HOME/rpmbuild/SPECS/"
CONF="$HOME/.config/voidedtech/upstream.bash"
if [ ! -e "$CONF" ]; then
  echo "missing config file"
  exit 1
fi
source "$CONF"
mkdir -p "$UPSTREAM"
VIM_PLUGINS="$HOME/.config/nvim/pack/plugins/start/"

_vim_plugin_update() {
  local name dir
  name=$(basename "$1")
  echo "updating: $name"
  dir="${VIM_PLUGINS}$name"
  if [ ! -d "$dir" ]; then
    if ! git clone "$1" "$dir" --single-branch; then
      echo "failed to clone $name"
      exit 1
    fi
  fi
  if ! git -C "$dir" pull origin $(git -C "$dir" rev-parse --abbrev-ref HEAD); then
    echo "failed to update $name"
    exit 1
  fi
}

_vim_plugins() {
  mkdir -p "$VIM_PLUGINS"
  for f in "${PLUGINS[@]}"; do
    _vim_plugin_update "$f"
  done
}

_externals() {
  local r n curr prev changed path
  if [ ! -e "$CONF" ]; then
    echo "no $CONFIG file"
    exit 1
  fi
  changed=0
  for path in "$BUILDS"*; do
    n=$(basename "$path" | sed 's/\.spec//g')
    r=$(grep "^URL:" "$path" | cut -d ":" -f 2- | sed 's/\s*//g')
    if [ -z "$r" ]; then
      echo "unable to get .spec URL"
      exit 1
    fi
    curr="${UPSTREAM}$n"
    prev="$curr.prev"
    echo "checking: $r ($n)"
    if ! git ls-remote --tags "$r" > "$curr"; then
      echo "failed to fetch: $r"
      exit 1
    fi
    if [ -e "$prev" ]; then
      if ! diff -u "$prev" "$curr"; then
        echo "$r has changed"
        if confirm "dismiss"; then
          mv "$curr" "$prev"
        fi
      fi
    else
      mv "$curr" "$prev"
    fi
  done
  exit $changed
}

mkdir -p "$UPSTREAM"
if [ -n "$1" ]; then
  if [ "$1" != "--check" ]; then
    echo "unknown command"
    exit 1
  fi
  CNT=$(find "$UPSTREAM" -type f -mtime -7 | wc -l)
  if [ $CNT -eq 0 ]; then
    exit 1
  fi
  exit 0
fi
_vim_plugins
_externals
