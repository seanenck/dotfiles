#!/usr/bin/env bash
CONF="$HOME/.config/voidedtech/toolbox.yml"
if [ -z "$1" ]; then
  echo "command required"
  exit 1
fi    

_update() {
  if ! toolbox run --container "$1" sudo cp "$HOME/.config/voidedtech/voidedtech.repo" /etc/yum.repos.d/voidedtech.repo; then
    echo "failed to setup local repo"
    exit 1
  fi
  if ! toolbox run --container "$1" sudo dnf update; then
    echo "failed to dnf update"
    exit 1
  fi
}

_list() {
  local cnt box
  {
    cnt=0
    box=$(yq '.boxes | length' "$CONF")
    if [ -n "$box" ] && [ "$box" -gt 0 ]; then
      while [ $cnt -lt $box ]; do
        yq ".boxes[$cnt].name" "$CONF"
        cnt=$((cnt+1))
      done
    fi
    toolbox list --containers | tail -n +2 | awk '{print $2}'
  } | sort -u
}

case "$1" in
  "--list")
  _list
  exit 0
  ;;
  "--update")
  for f in $(_list); do
    echo "updating: $f"
    _update "$f"
    echo
  done
  exit 0
  ;;
esac

if [ $(echo "$1" | wc -c) -le 3 ]; then
  echo "name must be >= 3 characters"
  exit 1
fi
HAS=$(toolbox list --containers | awk '{print $2}' | grep "^$1\$")
if [ -z "$HAS" ]; then
  SPEC=$(yq ".boxes[] | select (.name == \"$1\")" "$CONF")
  if [ -z "$ALLOW_ANY_TOOLBOX" ] || [ "$ALLOW_ANY_TOOLBOX" != "true" ]; then
    if [ -z "$SPEC" ]; then
      echo "can NOT create unknown toolbox, use ALLOW_ANY_TOOLBOX=true to override"
      exit 1
    fi
  fi
  DEFAULT_PKGS=$(yq '.defaults.packages[]' "$CONF")
  PKGS="$DEFAULT_PKGS"
  if [ -n "$SPEC" ]; then
    for P in $(echo "$SPEC" | yq '.packages[]'); do
      PKGS="$PKGS $P"
    done
  fi
  if ! toolbox create "$1"; then
    echo "failed to create $1"
    exit 1
  fi
  _update "$1"
  if ! toolbox run --container "$1" sudo dnf install -y $PKGS; then
    echo "failed to install default packages"
    exit 1
  fi
fi
exec toolbox enter "$1"
