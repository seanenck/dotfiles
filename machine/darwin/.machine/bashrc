export GOPATH="$HOME/Library/Caches/go"
export LOCAL_FS="$HOME/.fs"
export PATH="$DOTFILES/bin/$(uname -s | tr '[:upper:]' '[:lower:]'):$LOCAL_FS/usr/local/bin:$PATH"
export PATH="/opt/local/libexec/gnubin:/opt/local/bin:/opt/local/sbin:$PATH"
export LOCKBOX_STORE="$HOME/.env/passwords"
export LOCKBOX_KEYMODE="macos"
export LOCKBOX_TOTP="keys/totp/"
export DISPLAY=:0
export LOCAL_CACHE="$HOME/Library/Caches/com.voidedtech.Local"

for f in passwords machines/workstations; do
    if [ ! -d ~/.env/$f ]; then
        echo "-> $f not cloned"
    fi
done

for f in /opt/local/share/bash-completion/bash_completion \
         $HOME/.env/machines/workstations/bashrc; do
    if [ -e $f ]; then
        . $f
    fi
done

[[ ! -z "$AUTOMATED" ]] && [[ $AUTOMATED -eq 1 ]] && return

_localcomp() {
    local c f
    c=$LOCAL_FS/usr/local/share/bash-completion
    if [ -d "$c" ]; then
        for f in $(find $c -type f); do
            source $f
        done
    fi
}

_gpga() {
    CACHE=$LOCAL_CACHE/gpg/
    mkdir -p $CACHE
    find $CACHE -type f -mtime +2 -delete
    FILE=${CACHE}$(date +%Y-%m-%d)
    if [ ! -e $FILE ]; then
        killall gpg-agent 2>/dev/null
        touch $FILE
    fi
}

_vmrlist() {
    local f has
    has=""
    for f in $(vmr ls | grep " up " | awk '{print $3}'); do
        if [ -z "$has" ]; then
            has="yes"
            echo "vmr:"
        fi
        echo "  -> $f"
    done
    if [ ! -z "$has" ]; then
        echo
    fi
}

_localcomp
_gpga
export GPG_TTY=$(tty)
git uncommitted
_vmrlist
