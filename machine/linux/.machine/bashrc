export GOPATH="$HOME/.cache/go"
export PATH="$GOPATH/bin:$PATH"
export LOCKBOX_STORE="$HOME/.env/passwords"
export LOCKBOX_KEYMODE="command"
export LOCKBOX_TOTP="keys/totp/"
export DISPLAY=:0
COMPLETE=$LOCAL_FS/bash.completions

for f in /usr/share/bash-completion/bash_completion \
         $COMPLETE; do
    if [ -e $f ]; then
        . $f
    fi
done

_lbinst() {
    local cache cwd f
    cache="$HOME/.cache/lb"
    if [ ! -d "$cache" ]; then
        git clone https://voidedtech.com/git/lockbox $cache
    fi
    git -C $cache pull
    cwd=$PWD
    cd $cache
    rm -rf build
    meson build
    ninja -C build
    fs="$LOCAL_FS/usr/local/bin/"
    mkdir -p $fs
    for f in $(ls build/lb*); do
        install -Dm755 $f $fs
    done
    cd $cwd
    lb bash >> $COMPLETE
}

sys-upgrade() {
    local lintci linturl
    rm -f $COMPLETE
    git resync
    linturl=github.com/golangci/golangci-lint
    vim-plugin-upgrade
    go install github.com/mgechev/revive@latest
    go install golang.org/x/tools/...@latest
    go install golang.org/x/tools/gopls@latest
    lintci=$(git ls-remote --tags --sort=v:refname https://$linturl | tail -n 1 | awk '{print $2}' | cut -d '/' -f 3)
    if [ -z "$lintci" ]; then
        echo "unable to read golangci lint version"
        return
    fi
    go install $linturl/cmd/golangci-lint@$lintci
    _lbinst
}

export GPG_TTY=$(tty)
gpg-connect-agent updatestartuptty /bye >/dev/null 2>&1
git uncommitted
