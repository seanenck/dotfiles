set backspace=2
noremap <BS> <delete>
if has("autocmd")
    autocmd BufNewFile,BufRead *.gxs setlocal ft=gxs syntax=gxs
    autocmd BufNewFile,BufRead *.md setlocal spell
endif

let g:ale_completion_enabled = 1
set omnifunc=syntaxcomplete#Complete
set completeopt=noinsert
let g:ale_set_highlights = 0
let g:ale_sign_column_always = 1
nmap <silent> <C-F> <Plug>(ale_find_references)
nmap <silent> <C-G> <Plug>(ale_go_to_definition)
nmap <silent> <C-H> <Plug>(ale_previous_wrap)
nmap <silent> <C-J> <Plug>(ale_next_wrap)
let g:ale_linters = {}
let g:ale_linters.go = ['gopls', 'revive', 'goimports', 'govet']
let g:ale_linters.python = ['pylsp', 'pycodestyle', 'flake8', 'pydocstyle']
let g:ale_linters.rust = ['rls', 'analyzer', 'cargo']

let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'unique_tail_improved'
set hidden
nmap <C-n> :enew<CR>
nmap <Tab> :call NextBufferTab()<CR>
nmap <S-Tab> :call PrevBufferTab()<CR>
nmap <C-w> :call PrevBufferTab() <BAR> bd #<CR>
