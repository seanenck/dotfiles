applications:
  gopls:
    source:
      github:
        project: "golang/tools"
        release:
          asset: "tarball"
    build:
      steps:
        - command: ["go", "build", "-v", "-buildmode=pie", "-mod=readonly", "-modcacherw", "-ldflags", "-compressdwarf=false", "-o", "gopls"]
          directory: "gopls"
    deploy:
      artifacts:
        - files:
            - "gopls/gopls"
          destination: "~/.local/bin/"
  go:
    priority: 100
    source:
      git:
        repository: "https://github.com/golang/go"
        tagged:
          download: "https://go.dev/dl/{{ $.Vars.Tag }}.{{ $.OS }}-{{ $.Arch }}.tar.gz"
          filters: 
            - "refs/tags/weekly"
            - "refs/tags/release"
            - "[0-9]rc[0-9]"
    deploy:
      artifacts:
        - files:
            - "bin/go"
          destination: "~/.local/bin/"
  gofumpt:
    source:
      github:
        project: "mvdan/gofumpt"
        release:
          asset: "tarball"
    build:
      steps:
        - command: ["go", "build", "-trimpath", "-mod=readonly", "-modcacherw"]
    deploy:
      artifacts:
        - files:
            - "gofumpt"
          destination: "~/.local/bin/"
  revive:
    source:
      github:
        project: "mgechev/revive"
        release:
          asset: "tarball"
    build:
      steps:
        - command: ["go", "build", "-buildmode=pie", "-trimpath", "-modcacherw"]
    deploy:
      artifacts:
        - files:
            - "revive"
          destination: "~/.local/bin/"
  staticcheck:
    source:
      github:
        project: "dominikh/go-tools"
        release:
          asset: "tarball"
    build:
      steps:
        - command: ["go", "build", "-v", "-mod=readonly", "-modcacherw", "-ldflags", "-compressdwarf=false", "-o", "staticcheck", "./cmd/staticcheck"]
    deploy:
      artifacts:
        - files:
            - "staticcheck/staticcheck"
          destination: "~/.local/bin"
