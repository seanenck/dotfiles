{
  "golint": {
    "Flags": ["enabled"],
    "Settings": {
      "Tools": [
        {
          "Name": "revive",
          "Command": ["revive"],
          "Detect": false
        },
        {
          "Name": "govet",
          "Command": ["go", "vet"],
          "Detect": false
        },
        {
          "Name": "staticcheck",
          "Command": ["staticcheck", "-checks", "all", "-debug.run-quickfix-analyzers"],
          "Detect": false
        },
        {
          "Name": "gofumpt",
          "Command": ["gofumpt", "-l", "-extra"],
          "Detect": true
        }
      ]
    }
  },
  "remotes": {
    "Flags": ["enabled", "update-system"],
    "Settings": {
      "State": ".local/state/remotes",
      "Sources": {
        "https://github.com/kovidgoyal/kitty": "Git",
        "https://github.com/rxhanson/rectangle": "Git",
        "https://github.com/jqlang/jq": "Git",
        "https://github.com/golang/go": "Git",
        "https://github.com/neovim/neovim": "Git",
        "https://github.com/koalaman/shellcheck": "Git",
        "https://github.com/openssl/openssl": "Git",
        "https://git.code.sf.net/p/isync/isync": "Git",
        "https://github.com/scop/bash-completion": "Git",
        "https://ftp.gnu.org/gnu/bash/": "HTTP|bash",
        "https://curl.se/docs/caextract.html": "HTTP|curl"
      },
      "Modes": {
        "Git": {
          "Command": ["git", "ls-remote", "--tags"],
          "Filter": [
            "[a-zA-Z0-9.]+$",
            "[0-9].[0-9]"
          ]
        },
        "HTTP": {
          "Command": ["curl", "-L"],
          "Filters": {
            "bash": {
              "Start": "bash-[0-9][.]",
              "End": "[.]tar[.]gz"
            },
            "curl": {
              "Start": "/ca/cacert-",
              "End": "[.]pem"
            }
          }
        }
      }
    }
  },
  "update-system": {
    "Flags": ["enabled"],
    "Settings": {
      "Format": "2006-01-02",
      "Path": ".local/state/updates"
    }
  },
  "file-upload": {
    "Flags": ["enabled"],
    "Settings": {
      "Bind": "0.0.0.0:8080",
      "Store": "Downloads",
      "Extensions": ["jpeg", "jpg", "png", "mov"]
    }
  },
  "editor-plugins": {
    "Flags": ["enabled", "update-system"],
    "Settings": {
      "Plugins": [
        {
          "Path": ".config/vim/pack/dist/start",
          "Enabled": false,
          "Plugins": [
            "https://github.com/dense-analysis/ale",
            "https://github.com/vim-airline/vim-airline"
          ]
        },
        {
          "Path": ".config/nvim/pack/plugins/start",
          "Enabled": true,
          "Plugins": [
            "https://github.com/neovim/nvim-lspconfig",
            "https://github.com/hrsh7th/nvim-cmp",
            "https://github.com/hrsh7th/cmp-nvim-lsp",
            "https://github.com/vim-airline/vim-airline",
            "https://github.com/petertriho/nvim-scrollbar",
            "https://github.com/L3MON4D3/LuaSnip"
          ]
        }
      ]
    }
  },
  "git-uncommitted": {
    "Flags": ["enabled"],
    "Settings": {
      "Directories": ["Env", "Workspace"]
    }
  },
  "virt": {
    "Flags": ["enabled"],
    "Settings": {
      "Directory": ".config/vm"
    }
  },
  "transcode-media": {
    "Flags": ["enabled"],
    "Settings": {
      "Transcode": [
        {
          "Extensions": ["jpeg", "jpg", "mov"],
          "Command": ["cp", "{INPUT}", "{OUTPUT}.{EXT}"]
        },
        {
          "Extensions": ["heic"],
          "Command": ["sips", "--setProperty", "format", "jpeg", "--out", "{OUTPUT}.jpeg", "{INPUT}"]
        }
      ]
    }
  },
  "git-current-state": {
    "Flags": ["enabled"],
    "Settings": {}
  },
  "manage-data": {
    "Flags": ["enabled"],
    "Settings": {
      "Library": "Env/secrets/lib",
      "URL": "https://google.com"
    }
  },
  "devtools": {
    "Flags": ["enabled", "update-system"],
    "Settings": {
      "Go": [
        "honnef.co/go/tools/cmd/staticcheck@latest",
        "github.com/mgechev/revive@latest",
        "mvdan.cc/gofumpt@latest",
        "golang.org/x/tools/gopls@latest",
        "github.com/mattn/efm-langserver@latest",
        "github.com/rclone/rclone@latest"
      ],
      "Cargo": [
        "git-delta",
        "ripgrep",
        "bat"
      ]
    }
  },
  "build-from": {
    "Flags": ["enabled"],
    "Settings": {
      "Root": "/opt/fs/root",
      "Builds": {
        "contrib/completion/git-completion.bash": {
            "Install": [
                "ln",
                "-sf",
                "{{ $.CurDir }}/contrib/completion/git-completion.bash",
                "{{ $.RootDir }}/share/bash-completion/completions/git"
            ]
        },
        "bash_completion.sh.in": {
            "Configure": [
                "./configure",
                "--prefix={{ $.RootDir }}"
            ],
            "Build": ["make"],
            "Install": ["make", "install"]
        },
        "bin/nvim": {
            "Install": [
                "ln",
                "-sf",
                "{{ $.CurDir }}/bin/nvim",
                "{{ $.RootDir }}/bin/"
            ]
        },
        "cacert.pem": {
            "Install": [
                "cp",
                "cacert.pem",
                "{{ $.RootDir }}/etc/ssl/cacert.pem"
            ]
        },
        "bashline.c": {
            "Configure": [
                "./configure",
                "--prefix={{ $.RootDir }}"
            ],
            "Build": ["make"],
            "Install": ["make", "install"]
        },
        "isync.spec": {
            "Configure": [
                "./configure",
                "--prefix={{ $.RootDir }}",
                "--with-ssl={{ $.RootDir }}"
            ],
            "Build": ["make"],
            "Install": ["make", "install"]
        },
        "shellcheck": {
            "Install": [
                "ln",
                "-sf",
                "{{ $.CurDir }}/shellcheck",
                "{{ $.RootDir }}/bin/"
            ]
        },
        "jq": {
            "Install": [
                "ln",
                "-sf",
                "{{ $.CurDir }}/jq",
                "{{ $.RootDir }}/bin/"
            ]
        },
        "bin/go": {
            "Install": [
                "ln",
                "-sf",
                "{{ $.CurDir }}/bin/go",
                "{{ $.RootDir }}/bin/"
            ]
        },
        "include/openssl": {
          "Configure": [
            "./Configure",
            "--prefix={{ $.RootDir }}",
            "--openssldir={{ $.RootDir }}/etc/ssl",
            "--libdir=lib",
            "no-ssl3",
            "no-ssl3-method",
            "no-zlib"
          ],
          "Build": ["make"],
          "Install": [
            "make",
            "install",
            "MANDIR={{ $.RootDir }}/share/man",
            "MANSUFFIX=ssl"
          ]
        }
      }
    }
  }
}
