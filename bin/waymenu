#!/usr/bin/env python3
"""Menu helper."""
import csv
import os
import urllib.parse
import shlex
import subprocess

_APPS = {"firefox": ["firefox", "--new-window"],
         "pcmanfm": ["pcmanfm"],
         "transfer": ["filezilla"],
         "volume": ["pavucontrol"],
         "music": ["strawberry"],
         "terminal": ["kitty"]}


def main():
    """Program entry."""
    home = os.environ["HOME"]
    csv_path = os.path.join(home, ".env", "local", "lib", "commands.csv")
    if os.path.exists(csv_path):
        with open(csv_path) as f:
            c = csv.DictReader(f)
            for o in c:
                _APPS[o["name"]] = shlex.split(o["command"])
    keys = sorted(_APPS.keys())
    count = str(len(keys) + 1)
    subprocess.run(["pkill", "bemenu"])
    p = subprocess.Popen(["bemenu",
                          "-i",
                          "-l",
                          count,
                          "-w",
                          "-p",
                          "apps:"],
                         stdin=subprocess.PIPE,
                         stdout=subprocess.PIPE,
                         stderr=subprocess.DEVNULL)
    for k in keys:
        p.stdin.write((k + "\n").encode())
    o, _ = p.communicate()
    chosen = o.decode().strip()
    if not chosen:
        return
    if chosen in keys:
        cmd = _APPS[chosen]
        if cmd:
            subprocess.run(cmd)
            return
    url = None
    if len(chosen.split(" ")) == 1 and len(chosen.split(".")) > 1:
        parsed = urllib.parse.urlparse(chosen)
        if (parsed.scheme and parsed.netloc and not parsed.path) or \
           (not parsed.scheme and not parsed.netloc and parsed.path):
            if not parsed.query and not parsed.fragment and not parsed.params:
                url = chosen
    if not url:
        parsed = urllib.parse.quote(chosen)
        url = "https://duckduckgo.com?q={}".format(parsed)
    subprocess.run(["firefox", "--new-window", url])


if __name__ == "__main__":
    main()
