#!/usr/bin/env bash
PORT_CFG=$HOME/.config/macports/
PORT_CACHE=${LOCAL_CACHE}/ports
TOOL_CACHE=${LOCAL_CACHE}/remotes
BIN=$HOME/.fs
COMPLETIONS=$BIN/usr/local/share/bash-completion
NO_TOOLS="--no-tools"
NO_PORTS="--no-ports"
SYSUP_COMP="# bash completion for sys-upgrade                        -*- shell-script -*-

_sysupgrade() {
    local cur
    cur=\${COMP_WORDS[COMP_CWORD]}
    COMPREPLY=( \$(compgen -W \"$NO_PORTS $NO_TOOLS\" -- \$cur) )
}

complete -F _sysupgrade -o bashdefault -o default sys-upgrade"

_remote-tools() {
    local dir
    dir=$LOCAL_FS/usr/local/bin/
    mkdir -p $dir
    rm -f ${dir}lb*
    echo "-> update remote tools..."
    scp development:/var/cache/autobuilder/lockbox-macos/build/lb* $dir
    lb bash > "$COMPLETIONS/lb.bash"
}

_ports() {
    local port stat prev name target ports
    stat=$PORT_CACHE/last
    prev=$stat.prev
    echo "-> install/configure ports"
    ports=""
    while IFS= read -r port; do
        ports="$ports $port"
    done < "${PORT_CFG}install"
    echo "sudo port install $ports" >> "$stat"
    while IFS= read -r port; do
        name=$(echo "$port" | cut -d " " -f 1)
        target=$(echo "$port" | cut -d " " -f 2)
        echo "sudo port select --set $name $target" >> "$stat"
    done < "${PORT_CFG}select"
    chmod u+x "$stat"
    if [ "$(which python)" == "/usr/bin/python" ]; then
        rm "$prev"
    fi
    touch "$prev"
    if ! diff -u "$prev" "$stat"; then
        $stat
    fi
    mv "$stat" "$prev"
}

_sys-upgrade() {
    local f c
    c=$PWD
    git resync
    if [ "$1" -eq 1 ]; then
        echo "-> update ports"
        if ! sudo echo "sudo check"; then
            echo "no sudo"
            return
        fi
        sudo port selfupdate
        sudo port upgrade outdated
        _ports
        echo "-> cleanup ports"
        sudo port uninstall inactive
        sudo port reclaim
    fi
    if [ "$2" -eq 1 ]; then
        echo "-> update kitty"
        kitty-updater
        _remote-tools
        echo "$SYSUP_COMP" > "$COMPLETIONS/sys-upgrade.bash"
    fi
    cd "$c" || exit 1
}

mkdir -p "$PORT_CACHE" "$TOOL_CACHE" "$COMPLETIONS" "$BIN"
do_ports=1
do_tools=1
for i in "$@"; do
    case $i in
        "$NO_TOOLS")
            do_tools=0
            shift
            ;;
        "$NO_PORTS")
            do_ports=0
            shift
            ;;
        *)
            echo "unknown option: $i"
            exit 1
            ;;
    esac
done
_sys-upgrade $do_ports $do_tools
