export GOPATH="$HOME/Library/Caches/go"
export PATH="$HOME/.bin/libexec:$HOME/.bin:$PATH"
export PATH="/opt/local/libexec/gnubin:/opt/local/bin:/opt/local/sbin:$PATH"
export LOCKBOX_STORE="$HOME/.env/passwords"
export LOCKBOX_KEYMODE="macos"
export LOCKBOX_TOTP="keys/totp/"
export DISPLAY=:0
export LOCAL_CACHE="$HOME/Library/Caches/com.voidedtech.Local"
export MACRUN_SSH_KEY=$HOME/.ssh/systems.pub

for f in passwords workstations; do
    if [ ! -d ~/.env/$f ]; then
        echo "-> $f not cloned"
    fi
done

for f in /opt/local/share/bash-completion/bash_completion \
         $HOME/.env/workstations/bashrc \
         $HOME/.bash_aliases_local; do
    if [ -e $f ]; then
        . $f
    fi
done

if [ -d ~/.completions ]; then
    for f in $(find ~/.completions -type f -name "*.bash"); do
        . $f
    done
fi

_gpga() {
    CACHE=$LOCAL_CACHE/gpg/
    mkdir -p $CACHE
    find $CACHE -type f -mtime +2 -delete
    FILE=${CACHE}$(date +%Y-%m-%d)
    if [ ! -e $FILE ]; then
        killall gpg-agent 2>/dev/null
        touch $FILE
    fi
}

_macrun-running() {
    local list obj
    list=$(macrun list | cut -d "|" -f 2,3 | grep " up" | sed 's/^\s*//g' | cut -d " " -f 1)
    if [ ! -z "$list" ]; then
        echo "macrun:"
        for obj in $(echo $list); do
            echo "  -> $obj"
        done
        echo
    fi
}

_macrun_repo() {
    for f in en0 en1; do
        ipconfig getifaddr $f 2>/dev/null | grep -q "192.168.1."
        if [ $? -eq 0 ]; then
            echo "192.168.1.1:8888"
            return
        fi
    done
}

export MACRUN_ALPINE_VERSION="v3.14"
export MACRUN_REMOTE=$(_macrun_repo)
export MACRUN_LOCAL=1
if [ -z "$MACRUN_REMOTE" ]; then
    MACRUN_REMOTE="dl-cdn.alpinelinux.org"
    MACRUN_LOCAL=0
fi
export MACRUN_REPO="http://"$(_macrun_repo)"/alpine/$MACRUN_ALPINE_VERSION/main"

_gpga
export GPG_TTY=$(tty)
git uncommitted
_macrun-running
