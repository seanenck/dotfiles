#!/usr/bin/env bash
CONFIGS="$HOME/.vms/"

_init() {
  (cd "$CONFIGS$1" && vfu --config "$CONFIGS$1/config.json" $2)
}

_status() {
  if screen -list | grep -q "\.$1"; then
    echo "running"
    exit 0
  fi
  echo "stopped"
}

_set-time() {
  local ip msg now
  while : ; do
    now=$(python3 -c 'import time; print(int(time.time_ns()))')
    msg="{\"execute\": \"guest-set-time\", \"arguments\":{\"time\": $now}}"
    for ip in $(grep "ip_address=" /var/db/dhcpd_leases | cut -d "=" -f 2); do
      echo "$msg" | nc -G 1 "$ip" 9999 
    done
    sleep 15
  done 
}

_manage-time() {
  local script
  script="vm time"
  if screen -list | grep -q "vm-time"; then
    return
  fi
  echo "starting time manager"
  screen -S vm-time -d -m $script 
}

_start() {
  local script
  _status "$1"
  script="vm init $1"
  if ! $script "--verify"; then
    echo "verify failed"
    exit 1
  fi
  echo
  echo "starting $1..."
  echo
  _manage-time
  screen -S $1 -d -m $script
}

if [ -z "$1" ]; then
  echo "command required"
  exit 1
fi
if [ "$1" != "ls" ] && [ "$1" != "time" ]; then
  if [ -z "$2" ]; then
    echo "vm required"
    exit 1
  fi
  if [ ! -e "$CONFIGS$2/config.json" ]; then
    echo "$2 is not a valid vm"
    exit 1
  fi
fi

case "$1" in
  "time")
    _set-time
  ;;
  "start")
    _start $2
  ;;
  "init")
    _init $2 $3 
  ;;
  "stop")
    pkill vfu
  ;;
  "attach")
    screen -r $2
  ;;
  "status")
    _status $2
  ;;
  "ls")
    ls "$CONFIGS"
  ;;
  *)
    echo "unknown command: $1"
    exit 1
  ;;
esac
