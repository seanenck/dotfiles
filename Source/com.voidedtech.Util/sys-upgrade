#!/bin/bash
_vim-plugins() {
    for f in "vim-airline/vim-airline" "dense-analysis/ale"; do
        echo "$f"
        p="$HOME/.vim/pack/dist/start/"
        if [ ! -d $p ]; then
            mkdir -p $p
        fi
        p="$p"$(echo $f | cut -d "/" -f 2)
        if [ ! -d $p ]; then
            git clone "https://github.com/$f" $p
        fi
        git -C $p pull
    done
}

_update-tools() {
    local t
    mkdir -p $HOME/.bin
    mkdir -p $HOME/.completions
    for t in VFTool Lockbox Homedir Macrun; do
        cd $HOME/Source/com.voidedtech.$t && make && make install
    done
    golangci-lint completion bash > $HOME/.completions/golangci-lint.bash
}

_ports() {
    local cache port stat prev script
    cache=$HOME/Library/Caches/ports
    mkdir -p $cache
    stat=${cache}/last
    prev=$stat.prev
    IFS=$'\n'
    for port in $(cat $HOME/.config/macports/install); do
        echo "sudo port install $port" >> $stat
    done
    chmod u+x $stat
    touch $prev
    diff -u $prev $stat
    if [ $? -ne 0 ]; then
        $stat
    fi
    mv $stat $prev
}

sys-upgrade() {
    local f p c
    c=$PWD
    echo "-> update ports"
    sudo port selfupdate
    sudo port upgrade outdated
    cd $HOME/Source/com.voidedtech.Ports/ && make
    echo "-> update kitty"
    kitty-updater
    echo "-> cleanup ports"
    sudo port uninstall inactive
    sudo port reclaim
    echo "-> update vim plugins"
    _vim-plugins
    echo "-> setup defaults"
    if [ "$(which python)" == "/usr/bin/python" ]; then
        sudo port select --set python python39;
    fi
    which pycodestyle 2>&1 || sudo port select --set pycodestyle pycodestyle-py39
    which pydocstyle 2>&1 || sudo port select --set pydocstyle py39-pydocstyle
    which flake8 2>&1 || sudo port select --set flake8 flake8-39
    echo "update tooling"
    _update-tools
    cd $c
}

if [[ $_ == $0 ]]; then
    sys-upgrade
fi
