#!/bin/bash
CACHES=$HOME/Library/Caches/com.voidedtech.Util/
PORT_CFG=$HOME/.config/macports/
PORT_CACHE=${CACHES}ports
TOOL_CACHE=${CACHES}gittools
BIN=$HOME/.bin
COMPLETIONS=$HOME/.completions

_vim-plugins() {
    echo "-> update vim plugins"
    for f in "vim-airline/vim-airline" "dense-analysis/ale"; do
        echo "$f"
        p="$HOME/.vim/pack/dist/start/"
        if [ ! -d $p ]; then
            mkdir -p $p
        fi
        p="$p"$(echo $f | cut -d "/" -f 2)
        if [ ! -d $p ]; then
            git clone "https://github.com/$f" $p
        fi
        git -C $p pull
    done
}

_update-tools() {
    local t
    echo "-> update tooling"
    for t in Macrun; do
        cd $HOME/Source/com.voidedtech.$t && make && make install
    done
}

_git-setup() {
    local dir hash prev name cwd
    name=$(echo $1 | rev | cut -d "/" -f 1 | rev)
    dir=$TOOL_CACHE/$name
    if [ ! -d $dir ]; then
        git clone $1 $dir
    fi
    git -C $dir reset --hard
    git -C $dir pull
    hash="$TOOL_CACHE/$name.hash"
    prev="$hash.prev"
    git -C $dir log -n1 --format=%h > $hash
    touch $prev
    diff -u $prev $hash
    if [ $? -ne 0 ]; then
        $2 $dir
        for f in ${@:3}; do
            install -Dm755 $dir/$f "$BIN"
        done
    fi
    mv $hash $prev
}

_git-tools() {
    echo "-> update git-based tools"
    _git-setup "https://github.com/evansm7/vftool" "make -C" "build/vftool"
    _git-setup "https://cgit.voidedtech.com/lockbox" "make -C" "bin/lb" "bin/lb-diff" "bin/lb-pwgen" "bin/lb-rekey" "bin/lb-rw" "bin/lb-stats" "bin/lb-totp" "bin/lb-bash"
    golangci-lint completion bash > $COMPLETIONS/golangci-lint.bash
    lb bash > $COMPLETIONS/lb.bash
}

_ports() {
    local port stat prev script oldifs name target
    stat=$PORT_CACHE/last
    prev=$stat.prev
    echo "-> install/configure ports"
    oldifs=$IFS
    IFS=$'\n'
    for port in $(cat ${PORT_CFG}install); do
        echo "sudo port install $port" >> $stat
    done
    for port in $(cat ${PORT_CFG}select); do
        name=$(echo $port | cut -d " " -f 1)
        target=$(echo $port | cut -d " " -f 2)
        echo "sudo port select --set $name $target" >> $stat
    done
    IFS=$oldifs
    chmod u+x $stat
    if [ "$(which python)" == "/usr/bin/python" ]; then
        rm $prev
    fi
    touch $prev
    diff -u $prev $stat
    if [ $? -ne 0 ]; then
        $stat
    fi
    mv $stat $prev
}

sys-upgrade() {
    local f p c
    c=$PWD
    echo "-> update ports"
    sudo port selfupdate
    sudo port upgrade outdated
    _ports
    echo "-> cleanup ports"
    sudo port uninstall inactive
    sudo port reclaim
    echo "-> update kitty"
    kitty-updater
    _vim-plugins
    _update-tools
    _git-tools
    cd $c
}

mkdir -p $PORT_CACHE
mkdir -p $TOOL_CACHE
mkdir -p $COMPLETIONS
mkdir -p $BIN
if [[ "${BASH_SOURCE[0]}" != "${0}" ]]; then
    :
else
    sys-upgrade
fi
